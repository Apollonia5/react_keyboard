{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyName","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAe,CACbC,QAAS,IAFb,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,QAASE,EAAME,OAfrB,uDAKE,WACEC,SAASC,iBAAiB,UAAWC,KAAKN,kBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,kBAVjD,oBAmBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,mCACwBA,EADxB,KAEJ,kCA3Bd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.39c2bd54.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  keyName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    keyName: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({\n      keyName: event.key,\n    });\n  };\n\n  render() {\n    const { keyName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {keyName\n            ? `The last pressed key is [${keyName}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}